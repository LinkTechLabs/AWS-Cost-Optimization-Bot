AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cost Optimization Bot (Lambda + EventBridge + SNS)

Parameters:
  TopicEmail:
    Type: String
    Description: Email address to receive cost alerts
    AllowedPattern: ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$
    ConstraintDescription: Must be a valid email address
  
  BudgetLimit:
    Type: Number
    Default: 25
    Description: Monthly budget limit in USD
    MinValue: 1
    MaxValue: 10000

Resources:
  CostAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: CostAlertsTopic
      DisplayName: AWS Cost Alerts

  EmailSub:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref CostAlertsTopic
      Protocol: email
      Endpoint: !Ref TopicEmail

  CostBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CostOptimizationBot
      Runtime: python3.11
      Handler: cost_monitor.lambda_handler
      CodeUri: lambda/
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          TOPIC_ARN: !Ref CostAlertsTopic
          BUDGET_LIMIT: !Ref BudgetLimit
          ALERT_THRESHOLDS: "80,100,120"
          CURRENCY: "USD"
          SERVICES_LIMIT: "5"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action: 
                - "ce:GetCostAndUsage"
                - "ce:GetCostForecast"
                - "ce:GetDimensionValues"
              Resource: "*"
            - Effect: Allow
              Action: "sns:Publish"
              Resource: !Ref CostAlertsTopic

  DailyRule:
    Type: AWS::Events::Rule
    Properties:
      Name: CostBotDailySchedule
      Description: "Triggers the Cost Bot Lambda function daily"
      ScheduleExpression: "cron(30 3 * * ? *)" # 09:00 IST
      State: ENABLED
      Targets:
        - Arn: !GetAtt CostBotFunction.Arn
          Id: CostBotTarget

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CostBotFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt DailyRule.Arn

Outputs:
  CostBotFunction:
    Description: "Cost Optimization Bot Lambda Function"
    Value: !Ref CostBotFunction
  
  SnsTopic:
    Description: "SNS Topic for Cost Alerts"
    Value: !Ref CostAlertsTopic
    
  EmailSubscription:
    Description: "Email address subscribed to cost alerts"
    Value: !Ref TopicEmail
